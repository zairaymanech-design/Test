import { Component, OnInit } from '@angular/core';
import { ChartConfiguration, ChartType } from 'chart.js';

type Row = [number, string, string, number];

@Component({
  selector: 'app-one-pie',
  template: `
    <div class="chart-wrapper">
      <canvas baseChart
        [data]="chartData"
        [type]="chartType"
        [options]="chartOptions">
      </canvas>
    </div>
  `,
  styles: [`
    .chart-wrapper { width: 400px; margin: 2rem auto; }
  `]
})
export class OnePieComponent implements OnInit {
  chartType: ChartType = 'pie';
  chartData!: ChartConfiguration<'pie'>['data'];

  chartOptions: ChartConfiguration<'pie'>['options'] = {
    responsive: true,
    plugins: { legend: { position: 'bottom' } }
  };

  // ðŸ”¹ Your raw array
  dataArray: Row[] = [
    [1, 'Apples', 'Fruit', 30],
    [1, 'Carrots', 'Vegetable', 20],
    [2, 'Bananas', 'Fruit', 15],
    [2, 'Broccoli', 'Vegetable', 25],
    [3, 'Steak', 'Meat', 50],
    [3, 'Chicken', 'Meat', 30]
  ];

  ngOnInit(): void {
    this.chartData = this.transformData(this.dataArray);
  }

  private transformData(data: Row[]): ChartConfiguration<'pie'>['data'] {
    const labels = data.map(row => `${row[1]} (${row[2]})`); // Label (type)
    const values = data.map(row => row[3]); // Value
    const colors = data.map(() => this.randomColor()); // Random color for each slice

    return {
      labels,
      datasets: [
        {
          data: values,
          backgroundColor: colors,
          borderColor: '#ffffff',
          borderWidth: 2
        }
      ]
    };
  }

  private randomColor(): string {
    // Generates a bright random color (HSL format)
    const hue = Math.floor(Math.random() * 360);
    const saturation = 70 + Math.random() * 20; // 70â€“90%
    const lightness = 50 + Math.random() * 10;  // 50â€“60%
    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;
  }
}